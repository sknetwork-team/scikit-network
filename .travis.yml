dist: xenial   # required for Python >= 3.7
language: python

# lists all jobs to be run (with conditions depending on the setup: ie. making a release or updating develop)
matrix:
  include:
# release and pull request setup (builds wheels for Python 3.[7,8,9] on OSX, Windows and ManyLinux)
    # perform a linux build (see https://github.com/pypa/manylinux)
        - if: tag IS present OR type = "pull_request"
          services: docker
          env: DOCKER_IMAGE=quay.io/pypa/manylinux2014_x86_64
               PLAT=manylinux2014_x86_64
          install:
            - pip install codecov
            - docker pull $DOCKER_IMAGE
          # (bash) scripts to run after install
          script:
            - docker run --rm -e PLAT=$PLAT -v `pwd`:/io $DOCKER_IMAGE $PRE_CMD /io/travis/build-wheels.sh
          # remove NumPy and SciPy wheels
            - sudo rm -f wheelhouse/numpy* wheelhouse/scipy*
            - ls wheelhouse/
          after_success:
              - |
                if [[ $TRAVIS_TAG ]] && [ "$TRAVIS_PULL_REQUEST" = "false" ]; then
                  python3 -m pip install twine
                  python3 setup.py sdist
                  python3 -m twine upload wheelhouse/*.whl
                  python3 -m twine upload dist/*.tar*
                fi
      # and a mac build (see https://cibuildwheel.readthedocs.io/en/stable/)
        - if: tag IS present OR type = "pull_request"
          os: osx
          language: shell
          install:
            # travis_wait increases Travis timeout (to 30 minutes) because brew takes a long time to update
            - softwareupdate -i "Command Line Tools (macOS High Sierra version 10.13) for Xcode-10.1"
            - travis_wait brew install llvm libomp
            - python3 -m pip install cibuildwheel==1.10.0
          env:
            - HOMEBREW_NO_AUTO_UPDATE=1
            - CIBW_BEFORE_BUILD="pip install -r requirements_dev.txt && pip install ."
            - CIBW_BUILD="cp37-* cp38-* cp39-*"
            - CIBW_SKIP=*-manylinux*
            - CC=/usr/local/opt/llvm/bin/clang++
          script:
              # build the wheels, put them into './wheelhouse'
              - travis_wait 60 python3 -m cibuildwheel --output-dir wheelhouse
              - ls wheelhouse/
          after_success:
              - |
                if [[ $TRAVIS_TAG ]] && [ "$TRAVIS_PULL_REQUEST" = "false" ]; then
                  python3 -m pip install twine
                  python3 -m twine upload wheelhouse/*.whl
                fi
        # and a windows build (see https://cibuildwheel.readthedocs.io/en/stable/)
        - if: tag IS present OR type = "pull_request"
          os: windows
          language: shell
          before_install:
            - wget --quiet --no-check-certificate https://curl.haxx.se/ca/cacert.pem
            - export SSL_CERT_FILE=$PWD/cacert.pem
            - choco install python --version 3.9.4
            - export PATH="/c/Python39:/c/Python39/Scripts:$PATH"
            # make sure it's on PATH as 'python3'
            - ln -s /c/Python39/python.exe /c/Python39/python3.exe
            - python3 -m pip install --upgrade pip
          install:
              - python3 -m pip install cibuildwheel==1.10.0
          env:
            - CIBW_BEFORE_BUILD="pip install -r requirements_dev.txt --user && pip install ."
            - CIBW_BUILD="cp37-* cp38-* cp39-*"
            - CIBW_SKIP=*-manylinux*
          script:
              # build the wheels, put them into './wheelhouse'
              - python3 -m cibuildwheel --output-dir wheelhouse
              - ls wheelhouse/
          after_success:
              - |
                if [[ $TRAVIS_TAG ]] && [ "$TRAVIS_PULL_REQUEST" = "false" ]; then
                  python3 -m pip install twine
                  python3 -m twine upload wheelhouse/*.whl
                fi
        # jobs for dev setup (tests on Linux only for shorter runs)
        -   dist: xenial
            python: 3.7
            install:
                - pip install -r requirements_dev.txt
                - pip install codecov
                - python setup.py develop
            script:
                - py.test --doctest-modules --cov-report=xml --cov=sknetwork
            after_success:
                - codecov
        -   dist: xenial   # required for Python >= 3.7
            python: 3.8
            install:
                - pip install -r requirements_dev.txt
                - pip install codecov
                - python setup.py develop
            script:
                - py.test --doctest-modules --cov-report=xml --cov=sknetwork
            after_success:
                - codecov
        -   dist: xenial
            python: 3.9
            install:
                - pip install -r requirements_dev.txt
                - pip install codecov
                - python setup.py develop
            script:
                - py.test --doctest-modules --cov-report=xml --cov=sknetwork
            after_success:
                - codecov


